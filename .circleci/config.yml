version: 2

jobs:
  build:
    docker:
      - image: ubuntu

    working_directory: /opt/sericum

    steps:
      - checkout

      - setup_remote_docker

      - run:
          command: apt-get update

      - run:
          name: Install Docker client
          command: |
            apt-get update
            apt-get install -y curl
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: |
          docker build -t sericum -f Dockerfile_cov .
          docker run --security-opt seccomp=unconfined sericum bash run_kcov.sh $CODECOV_TOKEN

      # - run:
      #     command: |
      #       export DEBIAN_FRONTEND=noninteractive
      #       ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
      #       apt-get install -y zlib1g-dev wget gcc libffi-dev g++ python curl
      #       apt-get install -y libdw-dev cmake make git binutils-dev libiberty-dev libcurl4-openssl-dev libelf-dev libdw-dev 
      # 
      # - run:
      #     command: |
      #       wget "https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init"
      #       chmod +x rustup-init
      #       ./rustup-init -y --no-modify-path --default-toolchain nightly
      #       RUSTUP_HOME=~/.cargo/bin/rustup
      #       CARGO_HOME=~/.cargo/bin/cargo
      #       chmod -R a+w $RUSTUP_HOME $CARGO_HOME;
      #       rm rustup-init
      #       source ~/.cargo/env
      # 
      # - run:
      #     name: Setting up kcov
      #     command: |
      #       git clone https://github.com/SimonKagstrom/kcov
      #       cd kcov
      #       git checkout 9db5fa58986c2eae39e82580f15ba6fadb2dc906
      #       cmake .
      #       make -j
      #       make install
      # 
      # - run:
      #     name: Test and Coverage
      #     command: |
      #       export PATH=~/.cargo/bin:$PATH
      #       RUSTFLAGS='-C link-dead-code -C link-args=-lffi' cargo test
      # 
      #       REPORT=$(find ./target/debug -maxdepth 2 -regex '.+/deps/sericum-.*' -a ! -name '*.d')
      #       for file in $REPORT; do  
      #         echo $file
      #         /usr/local/bin/kcov --include-pattern=sericum/src --exclude-pattern=/.cargo ./target/cov "$file"
      #       done
      #       bash <(curl -s https://codecov.io/bash) -s ./target/cov
